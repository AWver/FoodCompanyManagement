@page "/dietPlans/edit/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime js
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims

<EditForm Model="@dietPlan" OnValidSubmit="EditDietPlan">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label>What foods will you add on? </label>
		<div>
			<InputText @bind-Value="@dietPlan.DietReccFoods" class="form-control" />
			<ValidationMessage For="@(() => dietPlan.DietReccFoods)" />
		</div>
	</div>

	<button type="submit" class="btn btn-success btn-block">
		Update
	</button>

</EditForm>

@code
{
	[Parameter] public int id { get; set; }
	DietPlan dietPlan = new DietPlan();
	public string currentReccFoods;

	protected async override Task OnParametersSetAsync()
	{
		dietPlan = await _client.GetFromJsonAsync<DietPlan>($"{Endpoints.DietPlansEndpoint}/{id}");
		currentReccFoods = dietPlan.DietReccFoods;
	}

	async Task EditDietPlan()
	{
		dietPlan.DietReccFoods = currentReccFoods + "," + dietPlan.DietReccFoods;
		await _client.PutAsJsonAsync<DietPlan>($"{Endpoints.DietPlansEndpoint}/{id}",dietPlan);
		_navManager.NavigateTo("/dietPlans/");
	}
}